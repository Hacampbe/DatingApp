{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\nconst _c0 = function (a0) {\n  return {\n    dropdown: a0\n  };\n};\n\nconst _c1 = [\"*\"];\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [style({\n  height: 0,\n  overflow: 'hidden'\n}), animate(DROPDOWN_ANIMATION_TIMING, style({\n  height: '*',\n  overflow: 'hidden'\n}))];\n\nclass BsDropdownState {\n  constructor() {\n    this.direction = 'down';\n    this.autoClose = true;\n    this.insideClick = false;\n    this.isAnimated = false;\n    this.stopOnClickPropagation = false;\n    this.isOpenChange = new EventEmitter();\n    this.isDisabledChange = new EventEmitter();\n    this.toggleClick = new EventEmitter();\n    this.counts = 0;\n    this.dropdownMenu = new Promise(resolve => {\n      this.resolveDropdownMenu = resolve;\n    });\n  }\n\n}\n\nBsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n  return new (t || BsDropdownState)();\n};\n\nBsDropdownState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownState,\n  factory: BsDropdownState.ɵfac,\n  providedIn: 'platform'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownState, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'platform'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})(); // todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\n\n\nclass BsDropdownContainerComponent {\n  constructor(_state, cd, _renderer, _element, _builder) {\n    this._state = _state;\n    this.cd = cd;\n    this._renderer = _renderer;\n    this._element = _element;\n    this.isOpen = false;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n    this._subscription = _state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n\n      const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n\n      this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n\n      if (dropdown && !isBs3()) {\n        this._renderer.addClass(dropdown, 'show');\n\n        if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n          this._renderer.setStyle(dropdown, 'left', 'auto');\n\n          this._renderer.setStyle(dropdown, 'right', '0');\n        }\n\n        if (this.direction === 'up') {\n          this._renderer.setStyle(dropdown, 'top', 'auto');\n\n          this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n        }\n      }\n\n      if (dropdown && this._state.isAnimated) {\n        this._factoryDropDownAnimation.create(dropdown).play();\n      }\n\n      this.cd.markForCheck();\n      this.cd.detectChanges();\n    });\n  }\n\n  get direction() {\n    return this._state.direction;\n  }\n  /** @internal */\n\n\n  _contains(el) {\n    return this._element.nativeElement.contains(el);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n\n}\n\nBsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n  return new (t || BsDropdownContainerComponent)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\n\nBsDropdownContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BsDropdownContainerComponent,\n  selectors: [[\"bs-dropdown-container\"]],\n  hostAttrs: [2, \"display\", \"block\", \"position\", \"absolute\", \"z-index\", \"1040\"],\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 9,\n  consts: [[3, \"ngClass\"]],\n  template: function BsDropdownContainerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.direction === \"down\"));\n    }\n  },\n  directives: [i3.NgClass],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownContainerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'bs-dropdown-container',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        style: 'display:block;position: absolute;z-index: 1040'\n      },\n      template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, null);\n})();\n/** Default dropdown configuration */\n\n\nclass BsDropdownConfig {\n  constructor() {\n    /** default dropdown auto closing behavior */\n    this.autoClose = true;\n    /** default dropdown auto closing behavior */\n\n    this.insideClick = false;\n    /** turn on/off animation */\n\n    this.isAnimated = false;\n    /** value true of stopOnClickPropagation allows event stopPropagation*/\n\n    this.stopOnClickPropagation = false;\n  }\n\n}\n\nBsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n  return new (t || BsDropdownConfig)();\n};\n\nBsDropdownConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BsDropdownConfig,\n  factory: BsDropdownConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass BsDropdownDirective {\n  constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n    this._elementRef = _elementRef;\n    this._renderer = _renderer;\n    this._viewContainerRef = _viewContainerRef;\n    this._cis = _cis;\n    this._state = _state;\n    this._config = _config;\n    /**\n     * This attribute indicates that the dropdown should be opened upwards\n     */\n\n    this.dropup = false; // todo: move to component loader\n\n    this._isInlineOpen = false;\n    this._isDisabled = false;\n    this._subscriptions = [];\n    this._isInited = false; // set initial dropdown state from config\n\n    this._state.autoClose = this._config.autoClose;\n    this._state.insideClick = this._config.insideClick;\n    this._state.isAnimated = this._config.isAnimated;\n    this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n    this._factoryDropDownAnimation = _builder.build(dropdownAnimation); // create dropdown component loader\n\n    this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n      provide: BsDropdownState,\n      useValue: this._state\n    });\n    this.onShown = this._dropdown.onShown;\n    this.onHidden = this._dropdown.onHidden;\n    this.isOpenChange = this._state.isOpenChange;\n  }\n  /**\n   * Indicates that dropdown will be closed on item or document click,\n   * and after pressing ESC\n   */\n\n\n  set autoClose(value) {\n    this._state.autoClose = value;\n  }\n\n  get autoClose() {\n    return this._state.autoClose;\n  }\n  /**\n   * Indicates that dropdown will be animated\n   */\n\n\n  set isAnimated(value) {\n    this._state.isAnimated = value;\n  }\n\n  get isAnimated() {\n    return this._state.isAnimated;\n  }\n  /**\n   * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n   */\n\n\n  set insideClick(value) {\n    this._state.insideClick = value;\n  }\n\n  get insideClick() {\n    return this._state.insideClick;\n  }\n  /**\n   * Disables dropdown toggle and hides dropdown menu if opened\n   */\n\n\n  set isDisabled(value) {\n    this._isDisabled = value;\n\n    this._state.isDisabledChange.emit(value);\n\n    if (value) {\n      this.hide();\n    }\n  }\n\n  get isDisabled() {\n    return this._isDisabled;\n  }\n  /**\n   * Returns whether or not the popover is currently being shown\n   */\n\n\n  get isOpen() {\n    if (this._showInline) {\n      return this._isInlineOpen;\n    }\n\n    return this._dropdown.isShown;\n  }\n\n  set isOpen(value) {\n    if (value) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  get isBs4() {\n    return !isBs3();\n  }\n\n  get _showInline() {\n    return !this.container;\n  }\n\n  ngOnInit() {\n    // fix: seems there are an issue with `routerLinkActive`\n    // which result in duplicated call ngOnInit without call to ngOnDestroy\n    // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n    if (this._isInited) {\n      return;\n    }\n\n    this._isInited = true; // attach DOM listeners\n\n    this._dropdown.listen({\n      // because of dropdown inline mode\n      outsideClick: false,\n      triggers: this.triggers,\n      show: () => this.show()\n    }); // toggle visibility on toggle element click\n\n\n    this._subscriptions.push(this._state.toggleClick.subscribe(value => this.toggle(value))); // hide dropdown if set disabled while opened\n\n\n    this._subscriptions.push(this._state.isDisabledChange.pipe(filter(value => value)).subscribe(() => this.hide()));\n  }\n  /**\n   * Opens an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n\n\n  show() {\n    if (this.isOpen || this.isDisabled) {\n      return;\n    }\n\n    if (this._showInline) {\n      if (!this._inlinedMenu) {\n        this._state.dropdownMenu.then(dropdownMenu => {\n          this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n\n          this._inlinedMenu = this._dropdown._inlineViewRef;\n          this.addBs4Polyfills();\n\n          if (this._inlinedMenu) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n          }\n\n          this.playAnimation();\n        }) // swallow errors\n        .catch();\n      }\n\n      this.addBs4Polyfills();\n      this._isInlineOpen = true;\n      this.onShown.emit(true);\n\n      this._state.isOpenChange.emit(true);\n\n      this.playAnimation();\n      return;\n    }\n\n    this._state.dropdownMenu.then(dropdownMenu => {\n      // check direction in which dropdown should be opened\n      const _dropup = this.dropup || typeof this.dropup !== 'undefined' && this.dropup;\n\n      this._state.direction = _dropup ? 'up' : 'down';\n\n      const _placement = this.placement || (_dropup ? 'top start' : 'bottom start'); // show dropdown\n\n\n      this._dropdown.attach(BsDropdownContainerComponent).to(this.container).position({\n        attachment: _placement\n      }).show({\n        content: dropdownMenu.templateRef,\n        placement: _placement\n      });\n\n      this._state.isOpenChange.emit(true);\n    }) // swallow error\n    .catch();\n  }\n  /**\n   * Closes an element’s popover. This is considered a “manual” triggering of\n   * the popover.\n   */\n\n\n  hide() {\n    if (!this.isOpen) {\n      return;\n    }\n\n    if (this._showInline) {\n      this.removeShowClass();\n      this.removeDropupStyles();\n      this._isInlineOpen = false;\n      this.onHidden.emit(true);\n    } else {\n      this._dropdown.hide();\n    }\n\n    this._state.isOpenChange.emit(false);\n  }\n  /**\n   * Toggles an element’s popover. This is considered a “manual” triggering of\n   * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n   * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n   */\n\n\n  toggle(value) {\n    if (this.isOpen || !value) {\n      return this.hide();\n    }\n\n    return this.show();\n  }\n  /** @internal */\n\n\n  _contains(event) {\n    // todo: valorkin fix typings\n    return this._elementRef.nativeElement.contains(event.target) || this._dropdown.instance && this._dropdown.instance._contains(event.target);\n  }\n\n  navigationClick(event) {\n    const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n    if (!ref) {\n      return;\n    }\n\n    const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n    const allRef = ref.querySelectorAll('.dropdown-item');\n\n    switch (event.keyCode) {\n      case 38:\n        if (this._state.counts > 0) {\n          allRef[--this._state.counts].focus();\n        }\n\n        break;\n\n      case 40:\n        if (this._state.counts + 1 < allRef.length) {\n          if (firstActive.classList !== allRef[this._state.counts].classList) {\n            allRef[this._state.counts].focus();\n          } else {\n            allRef[++this._state.counts].focus();\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    event.preventDefault();\n  }\n\n  ngOnDestroy() {\n    // clean up subscriptions and destroy dropdown\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n\n    this._dropdown.dispose();\n  }\n\n  addBs4Polyfills() {\n    if (!isBs3()) {\n      this.addShowClass();\n      this.checkRightAlignment();\n      this.addDropupStyles();\n    }\n  }\n\n  playAnimation() {\n    if (this._state.isAnimated && this._inlinedMenu) {\n      setTimeout(() => {\n        if (this._inlinedMenu) {\n          this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n        }\n      });\n    }\n  }\n\n  addShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  removeShowClass() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n    }\n  }\n\n  checkRightAlignment() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n    }\n  }\n\n  addDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      // a little hack to not break support of bootstrap 4 beta\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n\n      this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n    }\n  }\n\n  removeDropupStyles() {\n    if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n\n      this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n    }\n  }\n\n}\n\nBsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n  return new (t || BsDropdownDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(BsDropdownConfig), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n};\n\nBsDropdownDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownDirective,\n  selectors: [[\"\", \"bsDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n  hostVars: 6,\n  hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown.arrowDown\", function BsDropdownDirective_keydown_arrowDown_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      })(\"keydown.arrowUp\", function BsDropdownDirective_keydown_arrowUp_HostBindingHandler($event) {\n        return ctx.navigationClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"dropup\", ctx.dropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen && ctx.isBs4);\n    }\n  },\n  inputs: {\n    placement: \"placement\",\n    triggers: \"triggers\",\n    container: \"container\",\n    dropup: \"dropup\",\n    autoClose: \"autoClose\",\n    isAnimated: \"isAnimated\",\n    insideClick: \"insideClick\",\n    isDisabled: \"isDisabled\",\n    isOpen: \"isOpen\"\n  },\n  outputs: {\n    isOpenChange: \"isOpenChange\",\n    onShown: \"onShown\",\n    onHidden: \"onHidden\"\n  },\n  exportAs: [\"bs-dropdown\"],\n  features: [i0.ɵɵProvidersFeature([BsDropdownState])]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdown], [dropdown]',\n      exportAs: 'bs-dropdown',\n      providers: [BsDropdownState],\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[class.dropup]': 'dropup',\n        '[class.open]': 'isOpen',\n        '[class.show]': 'isOpen && isBs4'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i1.ComponentLoaderFactory\n    }, {\n      type: BsDropdownState\n    }, {\n      type: BsDropdownConfig\n    }, {\n      type: i2.AnimationBuilder\n    }];\n  }, {\n    placement: [{\n      type: Input\n    }],\n    triggers: [{\n      type: Input\n    }],\n    container: [{\n      type: Input\n    }],\n    dropup: [{\n      type: Input\n    }],\n    autoClose: [{\n      type: Input\n    }],\n    isAnimated: [{\n      type: Input\n    }],\n    insideClick: [{\n      type: Input\n    }],\n    isDisabled: [{\n      type: Input\n    }],\n    isOpen: [{\n      type: Input\n    }],\n    isOpenChange: [{\n      type: Output\n    }],\n    onShown: [{\n      type: Output\n    }],\n    onHidden: [{\n      type: Output\n    }],\n    navigationClick: [{\n      type: HostListener,\n      args: ['keydown.arrowDown', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keydown.arrowUp', ['$event']]\n    }]\n  });\n})();\n\nclass BsDropdownMenuDirective {\n  constructor(_state, _viewContainer, _templateRef) {\n    _state.resolveDropdownMenu({\n      templateRef: _templateRef,\n      viewContainer: _viewContainer\n    });\n  }\n\n}\n\nBsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n  return new (t || BsDropdownMenuDirective)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nBsDropdownMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownMenuDirective,\n  selectors: [[\"\", \"bsDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n  exportAs: [\"bs-dropdown-menu\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownMenuDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownMenu],[dropdownMenu]',\n      exportAs: 'bs-dropdown-menu'\n    }]\n  }], function () {\n    return [{\n      type: BsDropdownState\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nclass BsDropdownToggleDirective {\n  constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n    this._changeDetectorRef = _changeDetectorRef;\n    this._dropdown = _dropdown;\n    this._element = _element;\n    this._renderer = _renderer;\n    this._state = _state;\n    this.isOpen = false;\n    this._subscriptions = []; // sync is open value with state\n\n    this._subscriptions.push(this._state.isOpenChange.subscribe(value => {\n      this.isOpen = value;\n\n      if (value) {\n        this._documentClickListener = this._renderer.listen('document', 'click', event => {\n          if (this._state.autoClose && event.button !== 2 && !this._element.nativeElement.contains(event.target) && !(this._state.insideClick && this._dropdown._contains(event))) {\n            this._state.toggleClick.emit(false);\n\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n        this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n          if (this._state.autoClose) {\n            this._state.toggleClick.emit(false);\n\n            this._changeDetectorRef.detectChanges();\n          }\n        });\n      } else {\n        this._documentClickListener && this._documentClickListener();\n        this._escKeyUpListener && this._escKeyUpListener();\n      }\n    })); // populate disabled state\n\n\n    this._subscriptions.push(this._state.isDisabledChange.subscribe(value => this.isDisabled = value || void 0));\n  }\n\n  onClick(event) {\n    if (this._state.stopOnClickPropagation) {\n      event.stopPropagation();\n    }\n\n    if (this.isDisabled) {\n      return;\n    }\n\n    this._state.toggleClick.emit(true);\n  }\n\n  ngOnDestroy() {\n    if (this._documentClickListener) {\n      this._documentClickListener();\n    }\n\n    if (this._escKeyUpListener) {\n      this._escKeyUpListener();\n    }\n\n    for (const sub of this._subscriptions) {\n      sub.unsubscribe();\n    }\n  }\n\n}\n\nBsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n  return new (t || BsDropdownToggleDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(BsDropdownDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(BsDropdownState));\n};\n\nBsDropdownToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: BsDropdownToggleDirective,\n  selectors: [[\"\", \"bsDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n  hostVars: 3,\n  hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler($event) {\n        return ctx.onClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-haspopup\", true)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n    }\n  },\n  exportAs: [\"bs-dropdown-toggle\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownToggleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[bsDropdownToggle],[dropdownToggle]',\n      exportAs: 'bs-dropdown-toggle',\n      // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n      host: {\n        '[attr.aria-haspopup]': 'true'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ChangeDetectorRef\n    }, {\n      type: BsDropdownDirective\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: BsDropdownState\n    }];\n  }, {\n    isDisabled: [{\n      type: HostBinding,\n      args: ['attr.disabled']\n    }],\n    isOpen: [{\n      type: HostBinding,\n      args: ['attr.aria-expanded']\n    }],\n    onClick: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }]\n  });\n})();\n\nclass BsDropdownModule {\n  static forRoot() {\n    return {\n      ngModule: BsDropdownModule,\n      providers: [ComponentLoaderFactory, PositioningService, BsDropdownState]\n    };\n  }\n\n}\n\nBsDropdownModule.ɵfac = function BsDropdownModule_Factory(t) {\n  return new (t || BsDropdownModule)();\n};\n\nBsDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: BsDropdownModule\n});\nBsDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BsDropdownModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownContainerComponent, BsDropdownDirective],\n      exports: [BsDropdownMenuDirective, BsDropdownToggleDirective, BsDropdownDirective],\n      entryComponents: [BsDropdownContainerComponent]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };","map":{"version":3,"sources":["/home/hannahcampbell/Code/DatingApp/client/node_modules/ngx-bootstrap/dropdown/fesm2015/ngx-bootstrap-dropdown.mjs"],"names":["i0","EventEmitter","Injectable","Component","ChangeDetectionStrategy","Directive","Input","Output","HostListener","HostBinding","NgModule","filter","isBs3","i2","style","animate","i3","CommonModule","i1","ComponentLoaderFactory","PositioningService","DROPDOWN_ANIMATION_TIMING","dropdownAnimation","height","overflow","BsDropdownState","constructor","direction","autoClose","insideClick","isAnimated","stopOnClickPropagation","isOpenChange","isDisabledChange","toggleClick","counts","dropdownMenu","Promise","resolve","resolveDropdownMenu","ɵfac","ɵprov","type","args","providedIn","BsDropdownContainerComponent","_state","cd","_renderer","_element","_builder","isOpen","_factoryDropDownAnimation","build","_subscription","subscribe","value","dropdown","nativeElement","querySelector","addClass","classList","contains","setStyle","create","play","markForCheck","detectChanges","_contains","el","ngOnDestroy","unsubscribe","ChangeDetectorRef","Renderer2","ElementRef","AnimationBuilder","ɵcmp","NgClass","selector","changeDetection","OnPush","host","template","BsDropdownConfig","BsDropdownDirective","_elementRef","_viewContainerRef","_cis","_config","dropup","_isInlineOpen","_isDisabled","_subscriptions","_isInited","_dropdown","createLoader","provide","useValue","onShown","onHidden","isDisabled","emit","hide","_showInline","isShown","show","isBs4","container","ngOnInit","listen","outsideClick","triggers","push","toggle","pipe","_inlinedMenu","then","attachInline","viewContainer","templateRef","_inlineViewRef","addBs4Polyfills","rootNodes","parentNode","playAnimation","catch","_dropup","_placement","placement","attach","to","position","attachment","content","removeShowClass","removeDropupStyles","event","target","instance","navigationClick","ref","firstActive","ownerDocument","activeElement","allRef","querySelectorAll","keyCode","focus","length","preventDefault","sub","dispose","addShowClass","checkRightAlignment","addDropupStyles","setTimeout","removeClass","isRightAligned","removeStyle","ViewContainerRef","ɵdir","exportAs","providers","BsDropdownMenuDirective","_viewContainer","_templateRef","TemplateRef","BsDropdownToggleDirective","_changeDetectorRef","_documentClickListener","button","_escKeyUpListener","onClick","stopPropagation","BsDropdownModule","forRoot","ngModule","ɵmod","ɵinj","imports","declarations","exports","entryComponents"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [\n    style({ height: 0, overflow: 'hidden' }),\n    animate(DROPDOWN_ANIMATION_TIMING, style({ height: '*', overflow: 'hidden' }))\n];\n\nclass BsDropdownState {\n    constructor() {\n        this.direction = 'down';\n        this.autoClose = true;\n        this.insideClick = false;\n        this.isAnimated = false;\n        this.stopOnClickPropagation = false;\n        this.isOpenChange = new EventEmitter();\n        this.isDisabledChange = new EventEmitter();\n        this.toggleClick = new EventEmitter();\n        this.counts = 0;\n        this.dropdownMenu = new Promise(resolve => {\n            this.resolveDropdownMenu = resolve;\n        });\n    }\n}\nBsDropdownState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\n// todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\nclass BsDropdownContainerComponent {\n    constructor(_state, cd, _renderer, _element, _builder) {\n        this._state = _state;\n        this.cd = cd;\n        this._renderer = _renderer;\n        this._element = _element;\n        this.isOpen = false;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        this._subscription = _state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n            this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n            if (dropdown && !isBs3()) {\n                this._renderer.addClass(dropdown, 'show');\n                if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n                    this._renderer.setStyle(dropdown, 'left', 'auto');\n                    this._renderer.setStyle(dropdown, 'right', '0');\n                }\n                if (this.direction === 'up') {\n                    this._renderer.setStyle(dropdown, 'top', 'auto');\n                    this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n                }\n            }\n            if (dropdown && this._state.isAnimated) {\n                this._factoryDropDownAnimation.create(dropdown)\n                    .play();\n            }\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n        });\n    }\n    get direction() {\n        return this._state.direction;\n    }\n    /** @internal */\n    _contains(el) {\n        return this._element.nativeElement.contains(el);\n    }\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n}\nBsDropdownContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownContainerComponent, deps: [{ token: BsDropdownState }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nBsDropdownContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownContainerComponent, selector: \"bs-dropdown-container\", host: { styleAttribute: \"display:block;position: absolute;z-index: 1040\" }, ngImport: i0, template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `, isInline: true, directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bs-dropdown-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        style: 'display:block;position: absolute;z-index: 1040'\n                    },\n                    template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.AnimationBuilder }]; } });\n\n/** Default dropdown configuration */\nclass BsDropdownConfig {\n    constructor() {\n        /** default dropdown auto closing behavior */\n        this.autoClose = true;\n        /** default dropdown auto closing behavior */\n        this.insideClick = false;\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** value true of stopOnClickPropagation allows event stopPropagation*/\n        this.stopOnClickPropagation = false;\n    }\n}\nBsDropdownConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._viewContainerRef = _viewContainerRef;\n        this._cis = _cis;\n        this._state = _state;\n        this._config = _config;\n        /**\n         * This attribute indicates that the dropdown should be opened upwards\n         */\n        this.dropup = false;\n        // todo: move to component loader\n        this._isInlineOpen = false;\n        this._isDisabled = false;\n        this._subscriptions = [];\n        this._isInited = false;\n        // set initial dropdown state from config\n        this._state.autoClose = this._config.autoClose;\n        this._state.insideClick = this._config.insideClick;\n        this._state.isAnimated = this._config.isAnimated;\n        this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        // create dropdown component loader\n        this._dropdown = this._cis\n            .createLoader(this._elementRef, this._viewContainerRef, this._renderer)\n            .provide({ provide: BsDropdownState, useValue: this._state });\n        this.onShown = this._dropdown.onShown;\n        this.onHidden = this._dropdown.onHidden;\n        this.isOpenChange = this._state.isOpenChange;\n    }\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n    set autoClose(value) {\n        this._state.autoClose = value;\n    }\n    get autoClose() {\n        return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     */\n    set isAnimated(value) {\n        this._state.isAnimated = value;\n    }\n    get isAnimated() {\n        return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     */\n    set insideClick(value) {\n        this._state.insideClick = value;\n    }\n    get insideClick() {\n        return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n    set isDisabled(value) {\n        this._isDisabled = value;\n        this._state.isDisabledChange.emit(value);\n        if (value) {\n            this.hide();\n        }\n    }\n    get isDisabled() {\n        return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    get isOpen() {\n        if (this._showInline) {\n            return this._isInlineOpen;\n        }\n        return this._dropdown.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    get isBs4() {\n        return !isBs3();\n    }\n    get _showInline() {\n        return !this.container;\n    }\n    ngOnInit() {\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        // attach DOM listeners\n        this._dropdown.listen({\n            // because of dropdown inline mode\n            outsideClick: false,\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        // toggle visibility on toggle element click\n        this._subscriptions.push(this._state.toggleClick.subscribe((value) => this.toggle(value)));\n        // hide dropdown if set disabled while opened\n        this._subscriptions.push(this._state.isDisabledChange\n            .pipe(filter((value) => value))\n            .subscribe(( /*value: boolean*/) => this.hide()));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    show() {\n        if (this.isOpen || this.isDisabled) {\n            return;\n        }\n        if (this._showInline) {\n            if (!this._inlinedMenu) {\n                this._state.dropdownMenu.then((dropdownMenu) => {\n                    this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n                    this._inlinedMenu = this._dropdown._inlineViewRef;\n                    this.addBs4Polyfills();\n                    if (this._inlinedMenu) {\n                        this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n                    }\n                    this.playAnimation();\n                })\n                    // swallow errors\n                    .catch();\n            }\n            this.addBs4Polyfills();\n            this._isInlineOpen = true;\n            this.onShown.emit(true);\n            this._state.isOpenChange.emit(true);\n            this.playAnimation();\n            return;\n        }\n        this._state.dropdownMenu.then(dropdownMenu => {\n            // check direction in which dropdown should be opened\n            const _dropup = this.dropup ||\n                (typeof this.dropup !== 'undefined' && this.dropup);\n            this._state.direction = _dropup ? 'up' : 'down';\n            const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n            // show dropdown\n            this._dropdown\n                .attach(BsDropdownContainerComponent)\n                .to(this.container)\n                .position({ attachment: _placement })\n                .show({\n                content: dropdownMenu.templateRef,\n                placement: _placement\n            });\n            this._state.isOpenChange.emit(true);\n        })\n            // swallow error\n            .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    hide() {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._showInline) {\n            this.removeShowClass();\n            this.removeDropupStyles();\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n        }\n        else {\n            this._dropdown.hide();\n        }\n        this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     */\n    toggle(value) {\n        if (this.isOpen || !value) {\n            return this.hide();\n        }\n        return this.show();\n    }\n    /** @internal */\n    _contains(event) {\n        // todo: valorkin fix typings\n        return this._elementRef.nativeElement.contains(event.target) ||\n            (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n    }\n    navigationClick(event) {\n        const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n        if (!ref) {\n            return;\n        }\n        const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n        const allRef = ref.querySelectorAll('.dropdown-item');\n        switch (event.keyCode) {\n            case 38:\n                if (this._state.counts > 0) {\n                    allRef[--this._state.counts].focus();\n                }\n                break;\n            case 40:\n                if (this._state.counts + 1 < allRef.length) {\n                    if (firstActive.classList !== allRef[this._state.counts].classList) {\n                        allRef[this._state.counts].focus();\n                    }\n                    else {\n                        allRef[++this._state.counts].focus();\n                    }\n                }\n                break;\n            default:\n        }\n        event.preventDefault();\n    }\n    ngOnDestroy() {\n        // clean up subscriptions and destroy dropdown\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n        this._dropdown.dispose();\n    }\n    addBs4Polyfills() {\n        if (!isBs3()) {\n            this.addShowClass();\n            this.checkRightAlignment();\n            this.addDropupStyles();\n        }\n    }\n    playAnimation() {\n        if (this._state.isAnimated && this._inlinedMenu) {\n            setTimeout(() => {\n                if (this._inlinedMenu) {\n                    this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n                }\n            });\n        }\n    }\n    addShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    removeShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    checkRightAlignment() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n        }\n    }\n    addDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            // a little hack to not break support of bootstrap 4 beta\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n        }\n    }\n    removeDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n        }\n    }\n}\nBsDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: BsDropdownState }, { token: BsDropdownConfig }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownDirective, selector: \"[bsDropdown], [dropdown]\", inputs: { placement: \"placement\", triggers: \"triggers\", container: \"container\", dropup: \"dropup\", autoClose: \"autoClose\", isAnimated: \"isAnimated\", insideClick: \"insideClick\", isDisabled: \"isDisabled\", isOpen: \"isOpen\" }, outputs: { isOpenChange: \"isOpenChange\", onShown: \"onShown\", onHidden: \"onHidden\" }, host: { listeners: { \"keydown.arrowDown\": \"navigationClick($event)\", \"keydown.arrowUp\": \"navigationClick($event)\" }, properties: { \"class.dropup\": \"dropup\", \"class.open\": \"isOpen\", \"class.show\": \"isOpen && isBs4\" } }, providers: [BsDropdownState], exportAs: [\"bs-dropdown\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdown], [dropdown]',\n                    exportAs: 'bs-dropdown',\n                    providers: [BsDropdownState],\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[class.dropup]': 'dropup',\n                        '[class.open]': 'isOpen',\n                        '[class.show]': 'isOpen && isBs4'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: BsDropdownState }, { type: BsDropdownConfig }, { type: i2.AnimationBuilder }]; }, propDecorators: { placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], dropup: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], isAnimated: [{\n                type: Input\n            }], insideClick: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], navigationClick: [{\n                type: HostListener,\n                args: ['keydown.arrowDown', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.arrowUp', ['$event']]\n            }] } });\n\nclass BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n        _state.resolveDropdownMenu({\n            templateRef: _templateRef,\n            viewContainer: _viewContainer\n        });\n    }\n}\nBsDropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownMenuDirective, deps: [{ token: BsDropdownState }, { token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownMenuDirective, selector: \"[bsDropdownMenu],[dropdownMenu]\", exportAs: [\"bs-dropdown-menu\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownMenu],[dropdownMenu]',\n                    exportAs: 'bs-dropdown-menu'\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; } });\n\nclass BsDropdownToggleDirective {\n    constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dropdown = _dropdown;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._state = _state;\n        this.isOpen = false;\n        this._subscriptions = [];\n        // sync is open value with state\n        this._subscriptions.push(this._state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            if (value) {\n                this._documentClickListener = this._renderer.listen('document', 'click', (event) => {\n                    if (this._state.autoClose && event.button !== 2 &&\n                        !this._element.nativeElement.contains(event.target) &&\n                        !(this._state.insideClick && this._dropdown._contains(event))) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n                this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n                    if (this._state.autoClose) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n            }\n            else {\n                this._documentClickListener && this._documentClickListener();\n                this._escKeyUpListener && this._escKeyUpListener();\n            }\n        }));\n        // populate disabled state\n        this._subscriptions.push(this._state.isDisabledChange\n            .subscribe((value) => this.isDisabled = value || void 0));\n    }\n    onClick(event) {\n        if (this._state.stopOnClickPropagation) {\n            event.stopPropagation();\n        }\n        if (this.isDisabled) {\n            return;\n        }\n        this._state.toggleClick.emit(true);\n    }\n    ngOnDestroy() {\n        if (this._documentClickListener) {\n            this._documentClickListener();\n        }\n        if (this._escKeyUpListener) {\n            this._escKeyUpListener();\n        }\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n    }\n}\nBsDropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownToggleDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: BsDropdownDirective }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: BsDropdownState }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.1\", type: BsDropdownToggleDirective, selector: \"[bsDropdownToggle],[dropdownToggle]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"attr.aria-haspopup\": \"true\", \"attr.disabled\": \"this.isDisabled\", \"attr.aria-expanded\": \"this.isOpen\" } }, exportAs: [\"bs-dropdown-toggle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownToggleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownToggle],[dropdownToggle]',\n                    exportAs: 'bs-dropdown-toggle',\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[attr.aria-haspopup]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: BsDropdownDirective }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: BsDropdownState }]; }, propDecorators: { isDisabled: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isOpen: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass BsDropdownModule {\n    static forRoot() {\n        return {\n            ngModule: BsDropdownModule,\n            providers: [\n                ComponentLoaderFactory,\n                PositioningService,\n                BsDropdownState\n            ]\n        };\n    }\n}\nBsDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBsDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, declarations: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownContainerComponent,\n        BsDropdownDirective], imports: [CommonModule], exports: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownDirective] });\nBsDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: BsDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownContainerComponent,\n                        BsDropdownDirective\n                    ],\n                    exports: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownDirective\n                    ],\n                    entryComponents: [BsDropdownContainerComponent]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };\n"]},"metadata":{},"sourceType":"module"}